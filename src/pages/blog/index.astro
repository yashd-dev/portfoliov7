---
import slugify from "slugify";
import Layout from "../layout.astro";
import { tags, sortedPosts, unslugify } from "../../utils/posts";
import { Image } from "astro:assets";
import background from "../../assets/background.svg";

let options = {
  lower: true,
  trim: true,
  remove: undefined as undefined,
};

export const prerender = true;
---

<Layout
  title="Yash D's Blogs"
  imgurl="https://yashd.in/preview.png"
  description="Blog page of Yash Deshpande :)"
>
  <main class="px-4 flex flex-col items-center">
    <div class="content max-w-[600px] w-full">
      <a href="/" class="inline-flex items-center gap-2 text-gray-600 hover:text-blue-500"
        ><svg
          xmlns="http://www.w3.org/2000/svg"
          width="14"
          height="14"
          viewBox="0 0 24 24"
          fill="none"
          stroke="currentColor"
          stroke-width="2"
          stroke-linecap="round"
          stroke-linejoin="round"
          class="lucide lucide-undo2-icon lucide-undo-2"
          ><path d="M9 14 4 9l5-5"></path><path
            d="M4 9h10.5a5.5 5.5 0 0 1 5.5 5.5a5.5 5.5 0 0 1-5.5 5.5H11"
          ></path></svg
        >Home</a
      >
      <h1 class="text-2xl font-bold my-8 text-center">My Blogs</h1>

      <div
        class="mb-8 flex flex-wrap justify-center gap-3 animate-fade animate-duration-[230ms] animate-delay-200 animate-ease-in"
      >
        {
          tags.map((tag) => (
            <a
              href={`/tags/${slugify(tag, options)}`}
              class="px-4 py-2 rounded-full bg-gradient-to-r from-pink-100 to-rose-100 text-gray-800 text-sm transition-all duration-300 hover:shadow-md hover:from-pink-200 hover:to-rose-200 border border-pink-200/30"
            >
              <em>{unslugify(tag)}</em>
            </a>
          ))
        }
      </div>

      <div class="flex flex-col gap-6 w-full">
        {
          sortedPosts.slice(0, 5).map((post, index) => (
            <a
              href={`/blog/${post.slug}/`}
              class="flex flex-col items-start gap-4 p-5 rounded-none transition-all duration-300 hover:bg-white/60 hover:shadow-xl animate-fade animate-duration-[230ms] animate-ease-in bg-white/30 border border-gray-100"
              style={`animation-delay: ${400 + index * 200}ms`}
            >
              <div class="w-full">
                <h2 class="text-lg mb-2 font-semibold text-transparent bg-clip-text bg-[linear-gradient(60deg,_rgb(247,_149,_51),_rgb(243,_112,_85),_rgb(239,_78,_123),_rgb(161,_102,_171),_rgb(80,_115,_184),_rgb(16,_152,_173),_rgb(7,_179,_155),_rgb(111,_186,_130))]">
                  {post.data.title}
                </h2>
                <p class="text-gray-600 text-sm mb-4">
                  {post.data.description}
                </p>

                <div class="flex flex-wrap gap-2">
                  {post.data.tags &&
                    [...new Set(post.data.tags)].map((taggie) => (
                      <span class="px-3 py-1 rounded-full bg-gradient-to-r from-orange-50 to-amber-50 text-gray-700 text-xs border border-amber-100/30">
                        <em>{unslugify(taggie)}</em>
                      </span>
                    ))}
                </div>
              </div>
            </a>
          ))
        }
      </div>
    </div>
  </main>
</Layout>

<style>
  .line-seperator {
    flex: 1;
    height: 1px;
    background: linear-gradient(
      to right,
      rgba(0, 0, 0, 0.03),
      rgba(0, 0, 0, 0.1),
      rgba(0, 0, 0, 0.03)
    );
    margin: 0 0.5rem;
  }

  #background {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    filter: blur(100px);
  }

  .animate-fade {
    opacity: 0;
    animation-name: fadeIn;
    animation-fill-mode: forwards;
  }

  .animate-duration-\[230ms\] {
    animation-duration: 230ms;
  }

  .animate-duration-\[400ms\] {
    animation-duration: 400ms;
  }

  .animate-delay-200 {
    animation-delay: 200ms;
  }

  .animate-ease-in {
    animation-timing-function: ease-in;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .wave-hand {
    display: inline-block;
    animation: wave 2s infinite ease-in-out;
    transform-origin: 70% 70%;
  }

  @keyframes wave {
    0%,
    100% {
      transform: rotate(0deg);
    }
    20% {
      transform: rotate(15deg);
    }
    40% {
      transform: rotate(-10deg);
    }
    60% {
      transform: rotate(12deg);
    }
    80% {
      transform: rotate(-8deg);
    }
  }
</style>
